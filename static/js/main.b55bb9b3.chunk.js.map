{"version":3,"sources":["Components/Header.js","Components/OutputMessage.js","Components/Random.js","Components/MainContent.js","Components/Score.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Fragment","outPutMessage","randomNum","message","whiteBoardFail","whiteBoardPass","burnOut","fridayProject","plusRandomNum","Math","floor","random","console","log","minusRandomNum","EpicodusScore","props","whiteBoardPassNum","setState","prevState","updatedRandomNum","attendanceMessage","score","whiteBoardFailNum","fridayProjectNum","burnOutNum","generateRandomNum","restartScore","state","attendClassButton","restartGame","this","Button","className","onClick","returnScore","returnMessage","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b55bb9b3.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n  return (\n    <React.Fragment>\n      <h1>Epicodus Survival Game</h1>\n    </React.Fragment>\n  );\n}\n\nexport default Header;","export function outPutMessage(randomNum) {\n  let message = \"\";\n  if (randomNum === -3) {\n    message = \"Your computer crashed\";\n  } else if (randomNum === -2) {\n    message = \"3 hour debugging session\";\n  } else if (randomNum === -1) {\n    message = \"Redo friday project\";\n  } else if (randomNum === 1) {\n    message = \"Pair up for day\";\n  } else if (randomNum === 2) {\n    message = \"Get to see Jesse's cat on Google Meets\";\n  } else if (randomNum === 3) {\n    message = \"Pass friday project\";\n  }\n  return message;\n}\n\nexport function whiteBoardFail(randomNum) {\n  let message = \"\";\n  if (randomNum === -3) {\n    message = \"Recursion, Pascal's Triangle or crypto related problem\";\n  } else if (randomNum === -2) {\n    message = \"You received Leetcode 'easy'\";\n  } else if (randomNum === -1) {\n    message = \"Erik/James sits in on session\";\n  }\n  return message;\n}\n\nexport function whiteBoardPass(randomNum) {\n  let message = \"\";\n  if (randomNum === 1) {\n    message = \"Spoke during whole presentation\";\n  } else if (randomNum === 2) {\n    message = \"Edabit Easy\";\n  } else if (randomNum === 3) {\n    message = \"Solved problem on accident\";\n  }\n  return message;\n}\n\nexport function burnOut(randomNum) {\n  let message = \"\";\n  if (randomNum === -3) {\n    message = \"37 pages of homework\";\n  } else if (randomNum === -2) {\n    message = \"Intermediate JavaScript\";\n  } else if (randomNum === -1) {\n    message = \"Realize career services slide count\";\n  } \n  return message;\n}\n\nexport function fridayProject(randomNum) {\n  let message = \"\";\n  if (randomNum === 1) {\n    message = \"Woke up on time\";\n  } else if (randomNum === 2) {\n    message = \"Remembered to make timely commits\";\n  } else if (randomNum === 3) {\n    message = \"Celebratory beer after 5PM\";\n  }\n  return message;\n}\n","export function generateRandomNum() {\n  let randomNum = Math.floor(Math.random() * 7) - 3;\n  while (randomNum === 0) {\n    randomNum = Math.floor(Math.random() * 7) - 3;\n  }\n  console.log(randomNum);\n  return randomNum;\n}\n\nexport function plusRandomNum() {\n  let randomNum = Math.floor(Math.random() * (4 - 1) + 1);\n  console.log(randomNum);\n  return randomNum;\n}\n\nexport function minusRandomNum() {\n  let randomNum = Math.floor(Math.random() * 3) - 3;\n  console.log(randomNum);\n  return randomNum;\n}","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { outPutMessage, burnOut, fridayProject, whiteBoardFail, whiteBoardPass } from \"./OutputMessage\";\nimport { generateRandomNum, plusRandomNum, minusRandomNum } from \"./Random\";\nimport { returnMessage, winLoseMessage, returnScore } from \"./Score\";\nclass EpicodusScore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 5,\n      attendanceMessage: null,\n    };\n  }\n\n  whiteBoardPassNum = () => {\n    this.setState((prevState) => {\n      const updatedRandomNum = plusRandomNum()\n      this.setState({attendanceMessage: whiteBoardPass(updatedRandomNum)})\n      return { score: prevState.score + updatedRandomNum };\n    });\n  };\n\n  \n  whiteBoardFailNum = () => {\n    this.setState((prevState) => {\n      const updatedRandomNum = minusRandomNum()\n      this.setState({attendanceMessage: whiteBoardFail(updatedRandomNum)})\n      return { score: prevState.score + updatedRandomNum };\n    });\n  };\n  \n\n  fridayProjectNum = () => {\n    this.setState((prevState) => {\n      const updatedRandomNum = plusRandomNum()\n      this.setState({attendanceMessage: fridayProject(updatedRandomNum)})\n      return { score: prevState.score + updatedRandomNum };\n    });\n  };\n\n  burnOutNum = () => {\n    this.setState((prevState) => {\n      const updatedRandomNum = minusRandomNum()\n      this.setState({attendanceMessage: burnOut(updatedRandomNum)})\n      return { score: prevState.score + updatedRandomNum };\n    });\n  };\n\n  randomNum = () => {\n    this.setState((prevState) => {\n      const randomNum = generateRandomNum();\n      this.setState({attendanceMessage: outPutMessage(randomNum)});\n      return { score: prevState.score + randomNum };\n    });\n  };\n\n\n\n  restartScore = () => {\n    this.setState(() => {\n      return { score: 5, attendanceMessage: null };\n    });\n  };\n\n  render() {\n    let plusRandomNum = null;\n    let minusRandomNum = null;\n    let attendClassButton = null;\n    let restartGame = null;\n\n    if (this.state.score < 15 && this.state.score > 0) {\n      plusRandomNum = [\n        <Button className=\"buttons\" onClick={this.whiteBoardPassNum}>\n          Completes whiteboard problem\n        </Button>,\n        <Button className=\"buttons\" onClick={this.fridayProjectNum}>\n          Completes Friday Project on Time\n        </Button>,\n      ];\n        minusRandomNum = [\n        <Button className=\"buttons\" onClick={this.whiteBoardFailNum}>\n          Cries during white boarding session\n        </Button>,\n        <Button className=\"buttons\" onClick={this.burnOutNum}>\n          Burnout\n        </Button>,\n      ];\n      attendClassButton = [\n        <Button className=\"buttons\" onClick={this.randomNum}>\n          Attend Class\n        </Button>,\n      ];\n    } else if (this.state.score >= 15 || this.state.score <= 0) {\n      restartGame = <Button onClick={this.restartScore}>Play Again!</Button>;\n    }\n\n    return (\n      <React.Fragment>\n        <h3>{returnScore(this.state.score)}</h3>\n        <h3>{returnMessage(this.state.score, this.state.attendanceMessage)}</h3>\n\n        <h3>{winLoseMessage(this.state.score)}</h3>\n        {attendClassButton}\n        {restartGame}\n        {plusRandomNum}\n        {minusRandomNum}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EpicodusScore;\n","\nexport function winLoseMessage(score) {\n  if (score <= 0) {\n    return \"You lose! Try again next cohort!\" \n  } else if (score >= 15) {\n    return \"You win! Get ready for that unpaid internship :D\"\n  }\n}\n\nexport function returnScore(score) {\n  if (score > 0 && score < 15) {\n    return `Score: ${score}`;\n  }\n}\n\nexport function returnMessage(score, message) {\n  if (score > 0 && score < 15) {\n    return message;\n  }\n}","import './App.css';\nimport React from 'react';\nimport Header from './Components/Header';\nimport EpicodusScore from './Components/MainContent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n        <EpicodusScore/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}